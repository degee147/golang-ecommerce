package routes

import (
	"ecommerce-api/controllers"
	"ecommerce-api/middlewares"

	"github.com/gin-gonic/gin"
)

func SetupRoutes(router *gin.Engine) {

	// Serve Swagger UI files from the swagger-ui directory
	router.Static("/swagger-ui", "./swagger-ui/dist") // Serve the Swagger UI static files

	// Serve the Swagger JSON file at the /swagger/doc.json path
	router.GET("/swagger/doc.json", func(c *gin.Context) {
		// Serve the Swagger JSON generated by `swag init`
		c.File("./docs/swagger.json") // Adjust this path if necessary
	})

	// // Serve the Swagger UI at the /swagger URL path
	// url := ginSwagger.URL("http://localhost:8080/swagger/doc.json") // The url pointing to API definition (Swagger JSON)

	// // Wrap the Swagger handler and serve it under the /swagger path
	// router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler, url))

	api := router.Group("/api/v1")
	{

		// api.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
		// User routes
		api.POST("/register", controllers.RegisterUser)
		api.POST("/login", controllers.Login)

		// Product routes
		api.GET("/products", controllers.GetProducts)
		api.POST("/products", middlewares.AuthMiddleware(), middlewares.AdminMiddleware(), controllers.CreateProduct)
		api.PUT("/products/:id", middlewares.AuthMiddleware(), middlewares.AdminMiddleware(), controllers.UpdateProduct)
		api.DELETE("/products/:id", middlewares.AuthMiddleware(), middlewares.AdminMiddleware(), controllers.DeleteProduct)

		// Order routes
		api.POST("/orders", middlewares.AuthMiddleware(), controllers.CreateOrder)
		api.GET("/orders", middlewares.AuthMiddleware(), controllers.GetOrders)
		api.PUT("/orders/:id", middlewares.AuthMiddleware(), middlewares.AdminMiddleware(), controllers.UpdateOrderStatus)
		api.DELETE("/orders/:id", middlewares.AuthMiddleware(), controllers.CancelOrder)
	}
}
